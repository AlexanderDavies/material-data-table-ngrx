{"version":3,"sources":["src/material/material-core.umd.js"],"names":["global","factory","exports","module","require","define","amd","self","ng","material","core","cdk","a11y","bidi","tslib","coercion","rxjs","platform","platformBrowser","operators","common","animations","keycodes","this","i0","VERSION","Version","AnimationCurves","STANDARD_CURVE","DECELERATION_CURVE","ACCELERATION_CURVE","SHARP_CURVE","AnimationDurations","COMPLEX","ENTERING","EXITING","VERSION$1","MATERIAL_SANITY_CHECKS_FACTORY","MATERIAL_SANITY_CHECKS","InjectionToken","providedIn","MatCommonModule","highContrastModeDetector","sanityChecks","_hasDoneGlobalChecks","_document","document","_window","window","_applyBodyHighContrastModeCssClasses","_sanityChecks","_checkDoctypeIsDefined","_checkThemeIsPresent","_checkCdkVersionMatch","prototype","_checksAreEnabled","isDevMode","_isTestEnv","__karma__","jasmine","doctype","console","warn","theme","body","getComputedStyle","testElement","createElement","classList","add","appendChild","computedStyle","display","removeChild","version","full","decorators","type","NgModule","args","imports","BidiModule","ctorParameters","HighContrastModeDetector","undefined","Optional","Inject","mixinDisabled","base","_super","class_1","_i","arguments","length","_this","apply","__spread","_disabled","__extends","Object","defineProperty","get","set","value","coerceBooleanProperty","enumerable","configurable","MAT_DATE_LOCALE","MAT_DATE_LOCALE_FACTORY","inject","LOCALE_ID","SUPPORTS_INTL_API","MAT_DATE_LOCALE_PROVIDER","provide","useExisting","DateAdapter","_localeChanges","Subject","deserialize","isDateInstance","isValid","invalid","setLocale","locale","next","compareDate","first","second","getYear","getMonth","getDate","sameDate","firstValid","secondValid","clampDate","date","min","max","MAT_DATE_FORMATS","Intl","_a","DEFAULT_MONTH_NAMES","long","short","narrow","DEFAULT_DATE_NAMES","range","i","String","DEFAULT_DAY_OF_WEEK_NAMES","ISO_8601_REGEX","valueFunction","valuesArray","Array","NativeDateAdapter","matDateLocale","call","useUtcForDisplay","TRIDENT","_clampDate","EDGE","getFullYear","getDayOfWeek","getDay","getMonthNames","style","dtf_1","DateTimeFormat","month","timeZone","_stripDirectionalityCharacters","_format","Date","getDateNames","dtf_2","day","getDayOfWeekNames","dtf_3","weekday","getYearName","dtf","year","getFirstDayOfWeek","getNumDaysInMonth","_createDateWithOverflow","clone","getTime","createDate","Error","result","today","parse","format","displayFormat","setFullYear","Math","__assign","toDateString","addCalendarYears","years","addCalendarMonths","months","newDate","addCalendarDays","days","toIso8601","getUTCFullYear","_2digit","getUTCMonth","getUTCDate","join","test","obj","isNaN","NaN","n","slice","str","replace","d","UTC","getHours","getMinutes","getSeconds","getMilliseconds","Injectable","Platform","MAT_NATIVE_DATE_FORMATS","dateInput","monthYearLabel","dateA11yLabel","monthYearA11yLabel","NativeDateModule","PlatformModule","providers","useClass","ɵ0$1","MatNativeDateModule","useValue","ShowOnDirtyErrorStateMatcher","isErrorState","control","form","dirty","submitted","ErrorStateMatcher","touched","ɵprov","ɵɵdefineInjectable","ErrorStateMatcher_Factory","token","MAT_HAMMER_OPTIONS","ANGULAR_MATERIAL_SUPPORTED_HAMMER_GESTURES","ɵ1","noopHammerInstance","on","off","GestureConfig","_hammerOptions","_commonModule","events","buildHammer","element","hammer","Hammer","mc","pan","Pan","swipe","Swipe","press","Press","slide","_createRecognizer","event","threshold","longpress","time","recognizeWith","options","inheritances","recognizer","constructor","push","forEach","item","HammerGestureConfig","MatLine","Directive","selector","host","class","setLines","lines","changes","pipe","startWith","subscribe","setClass","className","isAdd","nativeElement","remove","RippleState","MatLineSetter","MatLineModule","declarations","RippleRef","_renderer","config","state","HIDDEN","fadeOut","fadeOutRipple","defaultRippleAnimationConfig","enterDuration","exitDuration","ignoreMouseEventsTimeout","passiveEventOptions","normalizePassiveListenerOptions","passive","RippleRenderer","_target","_ngZone","elementOrElementRef","_isPointerDown","_triggerEvents","Map","_activeRipples","Set","_onMousedown","isFakeMousedown","isFakeMousedownFromScreenReader","isSyntheticEvent","_lastTouchStartEvent","now","rippleDisabled","fadeInRipple","clientX","clientY","rippleConfig","_onTouchStart","touches","changedTouches","_onPointerUp","ripple","persistent","VISIBLE","terminateOnPointerUp","FADING_IN","isBrowser","_containerElement","coerceElement","x","y","containerRect","_containerRect","getBoundingClientRect","animationConfig","animation","centered","left","width","top","height","radius","distanceToFurthestCorner","rect","distX","abs","right","distY","bottom","sqrt","offsetX","offsetY","duration","color","backgroundColor","transitionDuration","enforceStyleRecalculation","getPropertyValue","transform","rippleRef","_mostRecentTransientRipple","_runTimeoutOutsideZone","isMostRecentTransientRipple","wasActive","delete","size","rippleEl","opacity","FADING_OUT","parentNode","fadeOutAll","setupTriggerEvents","_triggerElement","_removeTriggerEvents","runOutsideAngular","fn","addEventListener","delay","setTimeout","removeEventListener","MAT_RIPPLE_GLOBAL_OPTIONS","MatRipple","_elementRef","ngZone","globalOptions","animationMode","_isInitialized","_globalOptions","_rippleRenderer","_setupTriggerEventsIfEnabled","_trigger","trigger","ngOnInit","ngOnDestroy","disabled","launch","configOrX","exportAs","[class.mat-ripple-unbounded]","ElementRef","NgZone","ANIMATION_MODULE_TYPE","propDecorators","Input","unbounded","MatRippleModule","MatPseudoCheckbox","_animationMode","Component","encapsulation","ViewEncapsulation","None","changeDetection","ChangeDetectionStrategy","OnPush","template","[class.mat-pseudo-checkbox-indeterminate]","[class.mat-pseudo-checkbox-checked]","[class.mat-pseudo-checkbox-disabled]","[class._mat-animation-noopable]","styles","MatPseudoCheckboxModule","_MatOptgroupMixinBase","MatOptgroupBase","_uniqueOptgroupIdCounter","MatOptgroup","_labelId","inputs","role","[class.mat-optgroup-disabled]","[attr.aria-disabled]","[attr.aria-labelledby]","label","_uniqueIdCounter","MatOptionSelectionChange","source","isUserInput","MAT_OPTION_PARENT_COMPONENT","MatOption","_element","_changeDetectorRef","_parent","group","_selected","_active","_mostRecentViewValue","id","onSelectionChange","EventEmitter","_stateChanges","multiple","disableRipple","_getHostElement","textContent","trim","select","markForCheck","_emitSelectionChangeEvent","deselect","focus","_origin","setActiveStyles","setInactiveStyles","getLabel","viewValue","_handleKeydown","keyCode","ENTER","SPACE","hasModifierKey","_selectViaInteraction","preventDefault","_getAriaSelected","selected","_getTabIndex","ngAfterViewChecked","complete","emit","[attr.tabindex]","[class.mat-selected]","[class.mat-option-multiple]","[class.mat-active]","[id]","[attr.aria-selected]","[class.mat-option-disabled]","(click)","(keydown)","ChangeDetectorRef","Output","MatOptionModule","CommonModule","MAT_LABEL_GLOBAL_OPTIONS","APR","AUG","DEC","FEB","JAN","JUL","JUN","MAR","MAY","NOV","OCT","SEP","_countGroupLabelsBeforeOption","optionIndex","optionGroups","optionsArray","toArray","groups","groupCounter","_getOptionScrollPosition","optionHeight","currentScrollPosition","panelHeight","optionOffset","mixinColor","defaultColor","_color","colorPalette","mixinDisableRipple","_disableRipple","mixinErrorState","errorState","stateChanges","updateErrorState","oldState","newState","errorStateMatcher","_defaultErrorStateMatcher","ngControl","_parentFormGroup","_parentForm","mixinInitialized","_pendingSubscribers","initialized","Observable","subscriber","_notifySubscriber","_markInitialized","mixinTabIndex","defaultTabIndex","_tabIndex","ɵ0","ɵangular_material_src_material_core_core_a"],"mappings":"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","sourcesContent":["(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@angular/core'), require('@angular/cdk/a11y'), require('@angular/cdk/bidi'), require('@angular/cdk'), require('tslib'), require('@angular/cdk/coercion'), require('rxjs'), require('@angular/cdk/platform'), require('@angular/platform-browser'), require('rxjs/operators'), require('@angular/common'), require('@angular/platform-browser/animations'), require('@angular/cdk/keycodes')) :\n    typeof define === 'function' && define.amd ? define('@angular/material/core', ['exports', '@angular/core', '@angular/cdk/a11y', '@angular/cdk/bidi', '@angular/cdk', 'tslib', '@angular/cdk/coercion', 'rxjs', '@angular/cdk/platform', '@angular/platform-browser', 'rxjs/operators', '@angular/common', '@angular/platform-browser/animations', '@angular/cdk/keycodes'], factory) :\n    (global = global || self, factory((global.ng = global.ng || {}, global.ng.material = global.ng.material || {}, global.ng.material.core = {}), global.ng.core, global.ng.cdk.a11y, global.ng.cdk.bidi, global.ng.cdk, global.tslib, global.ng.cdk.coercion, global.rxjs, global.ng.cdk.platform, global.ng.platformBrowser, global.rxjs.operators, global.ng.common, global.ng.platformBrowser.animations, global.ng.cdk.keycodes));\n}(this, (function (exports, i0, a11y, bidi, cdk, tslib, coercion, rxjs, platform, platformBrowser, operators, common, animations, keycodes) { 'use strict';\n\n    /**\n     * @license\n     * Copyright Google LLC All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /** Current version of Angular Material. */\n    var VERSION = new i0.Version('9.0.0');\n\n    /**\n     * @license\n     * Copyright Google LLC All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /** @docs-private */\n    var AnimationCurves = /** @class */ (function () {\n        function AnimationCurves() {\n        }\n        AnimationCurves.STANDARD_CURVE = 'cubic-bezier(0.4,0.0,0.2,1)';\n        AnimationCurves.DECELERATION_CURVE = 'cubic-bezier(0.0,0.0,0.2,1)';\n        AnimationCurves.ACCELERATION_CURVE = 'cubic-bezier(0.4,0.0,1,1)';\n        AnimationCurves.SHARP_CURVE = 'cubic-bezier(0.4,0.0,0.6,1)';\n        return AnimationCurves;\n    }());\n    /** @docs-private */\n    var AnimationDurations = /** @class */ (function () {\n        function AnimationDurations() {\n        }\n        AnimationDurations.COMPLEX = '375ms';\n        AnimationDurations.ENTERING = '225ms';\n        AnimationDurations.EXITING = '195ms';\n        return AnimationDurations;\n    }());\n\n    /**\n     * @license\n     * Copyright Google LLC All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // Private version constant to circumvent test/build issues,\n    // i.e. avoid core to depend on the @angular/material primary entry-point\n    // Can be removed once the Material primary entry-point no longer\n    // re-exports all secondary entry-points\n    var VERSION$1 = new i0.Version('9.0.0');\n    /** @docs-private */\n    function MATERIAL_SANITY_CHECKS_FACTORY() {\n        return true;\n    }\n    /** Injection token that configures whether the Material sanity checks are enabled. */\n    var MATERIAL_SANITY_CHECKS = new i0.InjectionToken('mat-sanity-checks', {\n        providedIn: 'root',\n        factory: MATERIAL_SANITY_CHECKS_FACTORY,\n    });\n    /**\n     * Module that captures anything that should be loaded and/or run for *all* Angular Material\n     * components. This includes Bidi, etc.\n     *\n     * This module should be imported to each top-level component module (e.g., MatTabsModule).\n     */\n    var MatCommonModule = /** @class */ (function () {\n        function MatCommonModule(highContrastModeDetector, sanityChecks) {\n            /** Whether we've done the global sanity checks (e.g. a theme is loaded, there is a doctype). */\n            this._hasDoneGlobalChecks = false;\n            /** Reference to the global `document` object. */\n            this._document = typeof document === 'object' && document ? document : null;\n            /** Reference to the global 'window' object. */\n            this._window = typeof window === 'object' && window ? window : null;\n            // While A11yModule also does this, we repeat it here to avoid importing A11yModule\n            // in MatCommonModule.\n            highContrastModeDetector._applyBodyHighContrastModeCssClasses();\n            // Note that `_sanityChecks` is typed to `any`, because AoT\n            // throws an error if we use the `SanityChecks` type directly.\n            this._sanityChecks = sanityChecks;\n            if (!this._hasDoneGlobalChecks) {\n                this._checkDoctypeIsDefined();\n                this._checkThemeIsPresent();\n                this._checkCdkVersionMatch();\n                this._hasDoneGlobalChecks = true;\n            }\n        }\n        /** Whether any sanity checks are enabled. */\n        MatCommonModule.prototype._checksAreEnabled = function () {\n            return i0.isDevMode() && !this._isTestEnv();\n        };\n        /** Whether the code is running in tests. */\n        MatCommonModule.prototype._isTestEnv = function () {\n            var window = this._window;\n            return window && (window.__karma__ || window.jasmine);\n        };\n        MatCommonModule.prototype._checkDoctypeIsDefined = function () {\n            var isEnabled = this._checksAreEnabled() &&\n                (this._sanityChecks === true || this._sanityChecks.doctype);\n            if (isEnabled && this._document && !this._document.doctype) {\n                console.warn('Current document does not have a doctype. This may cause ' +\n                    'some Angular Material components not to behave as expected.');\n            }\n        };\n        MatCommonModule.prototype._checkThemeIsPresent = function () {\n            // We need to assert that the `body` is defined, because these checks run very early\n            // and the `body` won't be defined if the consumer put their scripts in the `head`.\n            var isDisabled = !this._checksAreEnabled() ||\n                (this._sanityChecks === false || !this._sanityChecks.theme);\n            if (isDisabled || !this._document || !this._document.body ||\n                typeof getComputedStyle !== 'function') {\n                return;\n            }\n            var testElement = this._document.createElement('div');\n            testElement.classList.add('mat-theme-loaded-marker');\n            this._document.body.appendChild(testElement);\n            var computedStyle = getComputedStyle(testElement);\n            // In some situations the computed style of the test element can be null. For example in\n            // Firefox, the computed style is null if an application is running inside of a hidden iframe.\n            // See: https://bugzilla.mozilla.org/show_bug.cgi?id=548397\n            if (computedStyle && computedStyle.display !== 'none') {\n                console.warn('Could not find Angular Material core theme. Most Material ' +\n                    'components may not work as expected. For more info refer ' +\n                    'to the theming guide: https://material.angular.io/guide/theming');\n            }\n            this._document.body.removeChild(testElement);\n        };\n        /** Checks whether the material version matches the cdk version */\n        MatCommonModule.prototype._checkCdkVersionMatch = function () {\n            var isEnabled = this._checksAreEnabled() &&\n                (this._sanityChecks === true || this._sanityChecks.version);\n            if (isEnabled && VERSION$1.full !== cdk.VERSION.full) {\n                console.warn('The Angular Material version (' + VERSION$1.full + ') does not match ' +\n                    'the Angular CDK version (' + cdk.VERSION.full + ').\\n' +\n                    'Please ensure the versions of these two packages exactly match.');\n            }\n        };\n        MatCommonModule.decorators = [\n            { type: i0.NgModule, args: [{\n                        imports: [bidi.BidiModule],\n                        exports: [bidi.BidiModule],\n                    },] }\n        ];\n        /** @nocollapse */\n        MatCommonModule.ctorParameters = function () { return [\n            { type: a11y.HighContrastModeDetector },\n            { type: undefined, decorators: [{ type: i0.Optional }, { type: i0.Inject, args: [MATERIAL_SANITY_CHECKS,] }] }\n        ]; };\n        return MatCommonModule;\n    }());\n\n    /**\n     * @license\n     * Copyright Google LLC All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /** Mixin to augment a directive with a `disabled` property. */\n    function mixinDisabled(base) {\n        return /** @class */ (function (_super) {\n            tslib.__extends(class_1, _super);\n            function class_1() {\n                var args = [];\n                for (var _i = 0; _i < arguments.length; _i++) {\n                    args[_i] = arguments[_i];\n                }\n                var _this = _super.apply(this, tslib.__spread(args)) || this;\n                _this._disabled = false;\n                return _this;\n            }\n            Object.defineProperty(class_1.prototype, \"disabled\", {\n                get: function () { return this._disabled; },\n                set: function (value) { this._disabled = coercion.coerceBooleanProperty(value); },\n                enumerable: true,\n                configurable: true\n            });\n            return class_1;\n        }(base));\n    }\n\n    /**\n     * @license\n     * Copyright Google LLC All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /** Mixin to augment a directive with a `color` property. */\n    function mixinColor(base, defaultColor) {\n        return /** @class */ (function (_super) {\n            tslib.__extends(class_1, _super);\n            function class_1() {\n                var args = [];\n                for (var _i = 0; _i < arguments.length; _i++) {\n                    args[_i] = arguments[_i];\n                }\n                var _this = _super.apply(this, tslib.__spread(args)) || this;\n                // Set the default color that can be specified from the mixin.\n                _this.color = defaultColor;\n                return _this;\n            }\n            Object.defineProperty(class_1.prototype, \"color\", {\n                get: function () { return this._color; },\n                set: function (value) {\n                    var colorPalette = value || defaultColor;\n                    if (colorPalette !== this._color) {\n                        if (this._color) {\n                            this._elementRef.nativeElement.classList.remove(\"mat-\" + this._color);\n                        }\n                        if (colorPalette) {\n                            this._elementRef.nativeElement.classList.add(\"mat-\" + colorPalette);\n                        }\n                        this._color = colorPalette;\n                    }\n                },\n                enumerable: true,\n                configurable: true\n            });\n            return class_1;\n        }(base));\n    }\n\n    /**\n     * @license\n     * Copyright Google LLC All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /** Mixin to augment a directive with a `disableRipple` property. */\n    function mixinDisableRipple(base) {\n        return /** @class */ (function (_super) {\n            tslib.__extends(class_1, _super);\n            function class_1() {\n                var args = [];\n                for (var _i = 0; _i < arguments.length; _i++) {\n                    args[_i] = arguments[_i];\n                }\n                var _this = _super.apply(this, tslib.__spread(args)) || this;\n                _this._disableRipple = false;\n                return _this;\n            }\n            Object.defineProperty(class_1.prototype, \"disableRipple\", {\n                /** Whether the ripple effect is disabled or not. */\n                get: function () { return this._disableRipple; },\n                set: function (value) { this._disableRipple = coercion.coerceBooleanProperty(value); },\n                enumerable: true,\n                configurable: true\n            });\n            return class_1;\n        }(base));\n    }\n\n    /**\n     * @license\n     * Copyright Google LLC All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /** Mixin to augment a directive with a `tabIndex` property. */\n    function mixinTabIndex(base, defaultTabIndex) {\n        if (defaultTabIndex === void 0) { defaultTabIndex = 0; }\n        return /** @class */ (function (_super) {\n            tslib.__extends(class_1, _super);\n            function class_1() {\n                var args = [];\n                for (var _i = 0; _i < arguments.length; _i++) {\n                    args[_i] = arguments[_i];\n                }\n                var _this = _super.apply(this, tslib.__spread(args)) || this;\n                _this._tabIndex = defaultTabIndex;\n                return _this;\n            }\n            Object.defineProperty(class_1.prototype, \"tabIndex\", {\n                get: function () { return this.disabled ? -1 : this._tabIndex; },\n                set: function (value) {\n                    // If the specified tabIndex value is null or undefined, fall back to the default value.\n                    this._tabIndex = value != null ? value : defaultTabIndex;\n                },\n                enumerable: true,\n                configurable: true\n            });\n            return class_1;\n        }(base));\n    }\n\n    /**\n     * @license\n     * Copyright Google LLC All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Mixin to augment a directive with updateErrorState method.\n     * For component with `errorState` and need to update `errorState`.\n     */\n    function mixinErrorState(base) {\n        return /** @class */ (function (_super) {\n            tslib.__extends(class_1, _super);\n            function class_1() {\n                var args = [];\n                for (var _i = 0; _i < arguments.length; _i++) {\n                    args[_i] = arguments[_i];\n                }\n                var _this = _super.apply(this, tslib.__spread(args)) || this;\n                /** Whether the component is in an error state. */\n                _this.errorState = false;\n                /**\n                 * Stream that emits whenever the state of the input changes such that the wrapping\n                 * `MatFormField` needs to run change detection.\n                 */\n                _this.stateChanges = new rxjs.Subject();\n                return _this;\n            }\n            class_1.prototype.updateErrorState = function () {\n                var oldState = this.errorState;\n                var parent = this._parentFormGroup || this._parentForm;\n                var matcher = this.errorStateMatcher || this._defaultErrorStateMatcher;\n                var control = this.ngControl ? this.ngControl.control : null;\n                var newState = matcher.isErrorState(control, parent);\n                if (newState !== oldState) {\n                    this.errorState = newState;\n                    this.stateChanges.next();\n                }\n            };\n            return class_1;\n        }(base));\n    }\n\n    /**\n     * @license\n     * Copyright Google LLC All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /** Mixin to augment a directive with an initialized property that will emits when ngOnInit ends. */\n    function mixinInitialized(base) {\n        return /** @class */ (function (_super) {\n            tslib.__extends(class_1, _super);\n            function class_1() {\n                var args = [];\n                for (var _i = 0; _i < arguments.length; _i++) {\n                    args[_i] = arguments[_i];\n                }\n                var _this = _super.apply(this, tslib.__spread(args)) || this;\n                /** Whether this directive has been marked as initialized. */\n                _this._isInitialized = false;\n                /**\n                 * List of subscribers that subscribed before the directive was initialized. Should be notified\n                 * during _markInitialized. Set to null after pending subscribers are notified, and should\n                 * not expect to be populated after.\n                 */\n                _this._pendingSubscribers = [];\n                /**\n                 * Observable stream that emits when the directive initializes. If already initialized, the\n                 * subscriber is stored to be notified once _markInitialized is called.\n                 */\n                _this.initialized = new rxjs.Observable(function (subscriber) {\n                    // If initialized, immediately notify the subscriber. Otherwise store the subscriber to notify\n                    // when _markInitialized is called.\n                    if (_this._isInitialized) {\n                        _this._notifySubscriber(subscriber);\n                    }\n                    else {\n                        _this._pendingSubscribers.push(subscriber);\n                    }\n                });\n                return _this;\n            }\n            /**\n             * Marks the state as initialized and notifies pending subscribers. Should be called at the end\n             * of ngOnInit.\n             * @docs-private\n             */\n            class_1.prototype._markInitialized = function () {\n                if (this._isInitialized) {\n                    throw Error('This directive has already been marked as initialized and ' +\n                        'should not be called twice.');\n                }\n                this._isInitialized = true;\n                this._pendingSubscribers.forEach(this._notifySubscriber);\n                this._pendingSubscribers = null;\n            };\n            /** Emits and completes the subscriber stream (should only emit once). */\n            class_1.prototype._notifySubscriber = function (subscriber) {\n                subscriber.next();\n                subscriber.complete();\n            };\n            return class_1;\n        }(base));\n    }\n\n    /**\n     * @license\n     * Copyright Google LLC All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google LLC All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /** InjectionToken for datepicker that can be used to override default locale code. */\n    var MAT_DATE_LOCALE = new i0.InjectionToken('MAT_DATE_LOCALE', {\n        providedIn: 'root',\n        factory: MAT_DATE_LOCALE_FACTORY,\n    });\n    /** @docs-private */\n    function MAT_DATE_LOCALE_FACTORY() {\n        return i0.inject(i0.LOCALE_ID);\n    }\n    /**\n     * No longer needed since MAT_DATE_LOCALE has been changed to a scoped injectable.\n     * If you are importing and providing this in your code you can simply remove it.\n     * @deprecated\n     * @breaking-change 8.0.0\n     */\n    var MAT_DATE_LOCALE_PROVIDER = { provide: MAT_DATE_LOCALE, useExisting: i0.LOCALE_ID };\n    /** Adapts type `D` to be usable as a date by cdk-based components that work with dates. */\n    var DateAdapter = /** @class */ (function () {\n        function DateAdapter() {\n            this._localeChanges = new rxjs.Subject();\n        }\n        Object.defineProperty(DateAdapter.prototype, \"localeChanges\", {\n            /** A stream that emits when the locale changes. */\n            get: function () { return this._localeChanges; },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * Attempts to deserialize a value to a valid date object. This is different from parsing in that\n         * deserialize should only accept non-ambiguous, locale-independent formats (e.g. a ISO 8601\n         * string). The default implementation does not allow any deserialization, it simply checks that\n         * the given value is already a valid date object or null. The `<mat-datepicker>` will call this\n         * method on all of its `@Input()` properties that accept dates. It is therefore possible to\n         * support passing values from your backend directly to these properties by overriding this method\n         * to also deserialize the format used by your backend.\n         * @param value The value to be deserialized into a date object.\n         * @returns The deserialized date object, either a valid date, null if the value can be\n         *     deserialized into a null date (e.g. the empty string), or an invalid date.\n         */\n        DateAdapter.prototype.deserialize = function (value) {\n            if (value == null || this.isDateInstance(value) && this.isValid(value)) {\n                return value;\n            }\n            return this.invalid();\n        };\n        /**\n         * Sets the locale used for all dates.\n         * @param locale The new locale.\n         */\n        DateAdapter.prototype.setLocale = function (locale) {\n            this.locale = locale;\n            this._localeChanges.next();\n        };\n        /**\n         * Compares two dates.\n         * @param first The first date to compare.\n         * @param second The second date to compare.\n         * @returns 0 if the dates are equal, a number less than 0 if the first date is earlier,\n         *     a number greater than 0 if the first date is later.\n         */\n        DateAdapter.prototype.compareDate = function (first, second) {\n            return this.getYear(first) - this.getYear(second) ||\n                this.getMonth(first) - this.getMonth(second) ||\n                this.getDate(first) - this.getDate(second);\n        };\n        /**\n         * Checks if two dates are equal.\n         * @param first The first date to check.\n         * @param second The second date to check.\n         * @returns Whether the two dates are equal.\n         *     Null dates are considered equal to other null dates.\n         */\n        DateAdapter.prototype.sameDate = function (first, second) {\n            if (first && second) {\n                var firstValid = this.isValid(first);\n                var secondValid = this.isValid(second);\n                if (firstValid && secondValid) {\n                    return !this.compareDate(first, second);\n                }\n                return firstValid == secondValid;\n            }\n            return first == second;\n        };\n        /**\n         * Clamp the given date between min and max dates.\n         * @param date The date to clamp.\n         * @param min The minimum value to allow. If null or omitted no min is enforced.\n         * @param max The maximum value to allow. If null or omitted no max is enforced.\n         * @returns `min` if `date` is less than `min`, `max` if date is greater than `max`,\n         *     otherwise `date`.\n         */\n        DateAdapter.prototype.clampDate = function (date, min, max) {\n            if (min && this.compareDate(date, min) < 0) {\n                return min;\n            }\n            if (max && this.compareDate(date, max) > 0) {\n                return max;\n            }\n            return date;\n        };\n        return DateAdapter;\n    }());\n\n    /**\n     * @license\n     * Copyright Google LLC All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var MAT_DATE_FORMATS = new i0.InjectionToken('mat-date-formats');\n\n    /**\n     * @license\n     * Copyright Google LLC All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // TODO(mmalerba): Remove when we no longer support safari 9.\n    /** Whether the browser supports the Intl API. */\n    var SUPPORTS_INTL_API;\n    // We need a try/catch around the reference to `Intl`, because accessing it in some cases can\n    // cause IE to throw. These cases are tied to particular versions of Windows and can happen if\n    // the consumer is providing a polyfilled `Map`. See:\n    // https://github.com/Microsoft/ChakraCore/issues/3189\n    // https://github.com/angular/components/issues/15687\n    try {\n        SUPPORTS_INTL_API = typeof Intl != 'undefined';\n    }\n    catch (_a) {\n        SUPPORTS_INTL_API = false;\n    }\n    /** The default month names to use if Intl API is not available. */\n    var DEFAULT_MONTH_NAMES = {\n        'long': [\n            'January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September',\n            'October', 'November', 'December'\n        ],\n        'short': ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],\n        'narrow': ['J', 'F', 'M', 'A', 'M', 'J', 'J', 'A', 'S', 'O', 'N', 'D']\n    };\n    var ɵ0 = function (i) { return String(i + 1); };\n    /** The default date names to use if Intl API is not available. */\n    var DEFAULT_DATE_NAMES = range(31, ɵ0);\n    /** The default day of the week names to use if Intl API is not available. */\n    var DEFAULT_DAY_OF_WEEK_NAMES = {\n        'long': ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'],\n        'short': ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'],\n        'narrow': ['S', 'M', 'T', 'W', 'T', 'F', 'S']\n    };\n    /**\n     * Matches strings that have the form of a valid RFC 3339 string\n     * (https://tools.ietf.org/html/rfc3339). Note that the string may not actually be a valid date\n     * because the regex will match strings an with out of bounds month, date, etc.\n     */\n    var ISO_8601_REGEX = /^\\d{4}-\\d{2}-\\d{2}(?:T\\d{2}:\\d{2}:\\d{2}(?:\\.\\d+)?(?:Z|(?:(?:\\+|-)\\d{2}:\\d{2}))?)?$/;\n    /** Creates an array and fills it with values. */\n    function range(length, valueFunction) {\n        var valuesArray = Array(length);\n        for (var i = 0; i < length; i++) {\n            valuesArray[i] = valueFunction(i);\n        }\n        return valuesArray;\n    }\n    /** Adapts the native JS Date for use with cdk-based components that work with dates. */\n    var NativeDateAdapter = /** @class */ (function (_super) {\n        tslib.__extends(NativeDateAdapter, _super);\n        function NativeDateAdapter(matDateLocale, platform) {\n            var _this = _super.call(this) || this;\n            /**\n             * Whether to use `timeZone: 'utc'` with `Intl.DateTimeFormat` when formatting dates.\n             * Without this `Intl.DateTimeFormat` sometimes chooses the wrong timeZone, which can throw off\n             * the result. (e.g. in the en-US locale `new Date(1800, 7, 14).toLocaleDateString()`\n             * will produce `'8/13/1800'`.\n             *\n             * TODO(mmalerba): drop this variable. It's not being used in the code right now. We're now\n             * getting the string representation of a Date object from its utc representation. We're keeping\n             * it here for sometime, just for precaution, in case we decide to revert some of these changes\n             * though.\n             */\n            _this.useUtcForDisplay = true;\n            _super.prototype.setLocale.call(_this, matDateLocale);\n            // IE does its own time zone correction, so we disable this on IE.\n            _this.useUtcForDisplay = !platform.TRIDENT;\n            _this._clampDate = platform.TRIDENT || platform.EDGE;\n            return _this;\n        }\n        NativeDateAdapter.prototype.getYear = function (date) {\n            return date.getFullYear();\n        };\n        NativeDateAdapter.prototype.getMonth = function (date) {\n            return date.getMonth();\n        };\n        NativeDateAdapter.prototype.getDate = function (date) {\n            return date.getDate();\n        };\n        NativeDateAdapter.prototype.getDayOfWeek = function (date) {\n            return date.getDay();\n        };\n        NativeDateAdapter.prototype.getMonthNames = function (style) {\n            var _this = this;\n            if (SUPPORTS_INTL_API) {\n                var dtf_1 = new Intl.DateTimeFormat(this.locale, { month: style, timeZone: 'utc' });\n                return range(12, function (i) {\n                    return _this._stripDirectionalityCharacters(_this._format(dtf_1, new Date(2017, i, 1)));\n                });\n            }\n            return DEFAULT_MONTH_NAMES[style];\n        };\n        NativeDateAdapter.prototype.getDateNames = function () {\n            var _this = this;\n            if (SUPPORTS_INTL_API) {\n                var dtf_2 = new Intl.DateTimeFormat(this.locale, { day: 'numeric', timeZone: 'utc' });\n                return range(31, function (i) { return _this._stripDirectionalityCharacters(_this._format(dtf_2, new Date(2017, 0, i + 1))); });\n            }\n            return DEFAULT_DATE_NAMES;\n        };\n        NativeDateAdapter.prototype.getDayOfWeekNames = function (style) {\n            var _this = this;\n            if (SUPPORTS_INTL_API) {\n                var dtf_3 = new Intl.DateTimeFormat(this.locale, { weekday: style, timeZone: 'utc' });\n                return range(7, function (i) { return _this._stripDirectionalityCharacters(_this._format(dtf_3, new Date(2017, 0, i + 1))); });\n            }\n            return DEFAULT_DAY_OF_WEEK_NAMES[style];\n        };\n        NativeDateAdapter.prototype.getYearName = function (date) {\n            if (SUPPORTS_INTL_API) {\n                var dtf = new Intl.DateTimeFormat(this.locale, { year: 'numeric', timeZone: 'utc' });\n                return this._stripDirectionalityCharacters(this._format(dtf, date));\n            }\n            return String(this.getYear(date));\n        };\n        NativeDateAdapter.prototype.getFirstDayOfWeek = function () {\n            // We can't tell using native JS Date what the first day of the week is, we default to Sunday.\n            return 0;\n        };\n        NativeDateAdapter.prototype.getNumDaysInMonth = function (date) {\n            return this.getDate(this._createDateWithOverflow(this.getYear(date), this.getMonth(date) + 1, 0));\n        };\n        NativeDateAdapter.prototype.clone = function (date) {\n            return new Date(date.getTime());\n        };\n        NativeDateAdapter.prototype.createDate = function (year, month, date) {\n            // Check for invalid month and date (except upper bound on date which we have to check after\n            // creating the Date).\n            if (month < 0 || month > 11) {\n                throw Error(\"Invalid month index \\\"\" + month + \"\\\". Month index has to be between 0 and 11.\");\n            }\n            if (date < 1) {\n                throw Error(\"Invalid date \\\"\" + date + \"\\\". Date has to be greater than 0.\");\n            }\n            var result = this._createDateWithOverflow(year, month, date);\n            // Check that the date wasn't above the upper bound for the month, causing the month to overflow\n            if (result.getMonth() != month) {\n                throw Error(\"Invalid date \\\"\" + date + \"\\\" for month with index \\\"\" + month + \"\\\".\");\n            }\n            return result;\n        };\n        NativeDateAdapter.prototype.today = function () {\n            return new Date();\n        };\n        NativeDateAdapter.prototype.parse = function (value) {\n            // We have no way using the native JS Date to set the parse format or locale, so we ignore these\n            // parameters.\n            if (typeof value == 'number') {\n                return new Date(value);\n            }\n            return value ? new Date(Date.parse(value)) : null;\n        };\n        NativeDateAdapter.prototype.format = function (date, displayFormat) {\n            if (!this.isValid(date)) {\n                throw Error('NativeDateAdapter: Cannot format invalid date.');\n            }\n            if (SUPPORTS_INTL_API) {\n                // On IE and Edge the i18n API will throw a hard error that can crash the entire app\n                // if we attempt to format a date whose year is less than 1 or greater than 9999.\n                if (this._clampDate && (date.getFullYear() < 1 || date.getFullYear() > 9999)) {\n                    date = this.clone(date);\n                    date.setFullYear(Math.max(1, Math.min(9999, date.getFullYear())));\n                }\n                displayFormat = tslib.__assign(tslib.__assign({}, displayFormat), { timeZone: 'utc' });\n                var dtf = new Intl.DateTimeFormat(this.locale, displayFormat);\n                return this._stripDirectionalityCharacters(this._format(dtf, date));\n            }\n            return this._stripDirectionalityCharacters(date.toDateString());\n        };\n        NativeDateAdapter.prototype.addCalendarYears = function (date, years) {\n            return this.addCalendarMonths(date, years * 12);\n        };\n        NativeDateAdapter.prototype.addCalendarMonths = function (date, months) {\n            var newDate = this._createDateWithOverflow(this.getYear(date), this.getMonth(date) + months, this.getDate(date));\n            // It's possible to wind up in the wrong month if the original month has more days than the new\n            // month. In this case we want to go to the last day of the desired month.\n            // Note: the additional + 12 % 12 ensures we end up with a positive number, since JS % doesn't\n            // guarantee this.\n            if (this.getMonth(newDate) != ((this.getMonth(date) + months) % 12 + 12) % 12) {\n                newDate = this._createDateWithOverflow(this.getYear(newDate), this.getMonth(newDate), 0);\n            }\n            return newDate;\n        };\n        NativeDateAdapter.prototype.addCalendarDays = function (date, days) {\n            return this._createDateWithOverflow(this.getYear(date), this.getMonth(date), this.getDate(date) + days);\n        };\n        NativeDateAdapter.prototype.toIso8601 = function (date) {\n            return [\n                date.getUTCFullYear(),\n                this._2digit(date.getUTCMonth() + 1),\n                this._2digit(date.getUTCDate())\n            ].join('-');\n        };\n        /**\n         * Returns the given value if given a valid Date or null. Deserializes valid ISO 8601 strings\n         * (https://www.ietf.org/rfc/rfc3339.txt) into valid Dates and empty string into null. Returns an\n         * invalid date for all other values.\n         */\n        NativeDateAdapter.prototype.deserialize = function (value) {\n            if (typeof value === 'string') {\n                if (!value) {\n                    return null;\n                }\n                // The `Date` constructor accepts formats other than ISO 8601, so we need to make sure the\n                // string is the right format first.\n                if (ISO_8601_REGEX.test(value)) {\n                    var date = new Date(value);\n                    if (this.isValid(date)) {\n                        return date;\n                    }\n                }\n            }\n            return _super.prototype.deserialize.call(this, value);\n        };\n        NativeDateAdapter.prototype.isDateInstance = function (obj) {\n            return obj instanceof Date;\n        };\n        NativeDateAdapter.prototype.isValid = function (date) {\n            return !isNaN(date.getTime());\n        };\n        NativeDateAdapter.prototype.invalid = function () {\n            return new Date(NaN);\n        };\n        /** Creates a date but allows the month and date to overflow. */\n        NativeDateAdapter.prototype._createDateWithOverflow = function (year, month, date) {\n            var result = new Date(year, month, date);\n            // We need to correct for the fact that JS native Date treats years in range [0, 99] as\n            // abbreviations for 19xx.\n            if (year >= 0 && year < 100) {\n                result.setFullYear(this.getYear(result) - 1900);\n            }\n            return result;\n        };\n        /**\n         * Pads a number to make it two digits.\n         * @param n The number to pad.\n         * @returns The padded number.\n         */\n        NativeDateAdapter.prototype._2digit = function (n) {\n            return ('00' + n).slice(-2);\n        };\n        /**\n         * Strip out unicode LTR and RTL characters. Edge and IE insert these into formatted dates while\n         * other browsers do not. We remove them to make output consistent and because they interfere with\n         * date parsing.\n         * @param str The string to strip direction characters from.\n         * @returns The stripped string.\n         */\n        NativeDateAdapter.prototype._stripDirectionalityCharacters = function (str) {\n            return str.replace(/[\\u200e\\u200f]/g, '');\n        };\n        /**\n         * When converting Date object to string, javascript built-in functions may return wrong\n         * results because it applies its internal DST rules. The DST rules around the world change\n         * very frequently, and the current valid rule is not always valid in previous years though.\n         * We work around this problem building a new Date object which has its internal UTC\n         * representation with the local date and time.\n         * @param dtf Intl.DateTimeFormat object, containg the desired string format. It must have\n         *    timeZone set to 'utc' to work fine.\n         * @param date Date from which we want to get the string representation according to dtf\n         * @returns A Date object with its UTC representation based on the passed in date info\n         */\n        NativeDateAdapter.prototype._format = function (dtf, date) {\n            var d = new Date(Date.UTC(date.getFullYear(), date.getMonth(), date.getDate(), date.getHours(), date.getMinutes(), date.getSeconds(), date.getMilliseconds()));\n            return dtf.format(d);\n        };\n        NativeDateAdapter.decorators = [\n            { type: i0.Injectable }\n        ];\n        /** @nocollapse */\n        NativeDateAdapter.ctorParameters = function () { return [\n            { type: String, decorators: [{ type: i0.Optional }, { type: i0.Inject, args: [MAT_DATE_LOCALE,] }] },\n            { type: platform.Platform }\n        ]; };\n        return NativeDateAdapter;\n    }(DateAdapter));\n\n    /**\n     * @license\n     * Copyright Google LLC All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var MAT_NATIVE_DATE_FORMATS = {\n        parse: {\n            dateInput: null,\n        },\n        display: {\n            dateInput: { year: 'numeric', month: 'numeric', day: 'numeric' },\n            monthYearLabel: { year: 'numeric', month: 'short' },\n            dateA11yLabel: { year: 'numeric', month: 'long', day: 'numeric' },\n            monthYearA11yLabel: { year: 'numeric', month: 'long' },\n        }\n    };\n\n    /**\n     * @license\n     * Copyright Google LLC All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var NativeDateModule = /** @class */ (function () {\n        function NativeDateModule() {\n        }\n        NativeDateModule.decorators = [\n            { type: i0.NgModule, args: [{\n                        imports: [platform.PlatformModule],\n                        providers: [\n                            { provide: DateAdapter, useClass: NativeDateAdapter },\n                        ],\n                    },] }\n        ];\n        return NativeDateModule;\n    }());\n    var ɵ0$1 = MAT_NATIVE_DATE_FORMATS;\n    var MatNativeDateModule = /** @class */ (function () {\n        function MatNativeDateModule() {\n        }\n        MatNativeDateModule.decorators = [\n            { type: i0.NgModule, args: [{\n                        imports: [NativeDateModule],\n                        providers: [{ provide: MAT_DATE_FORMATS, useValue: ɵ0$1 }],\n                    },] }\n        ];\n        return MatNativeDateModule;\n    }());\n\n    /**\n     * @license\n     * Copyright Google LLC All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /** Error state matcher that matches when a control is invalid and dirty. */\n    var ShowOnDirtyErrorStateMatcher = /** @class */ (function () {\n        function ShowOnDirtyErrorStateMatcher() {\n        }\n        ShowOnDirtyErrorStateMatcher.prototype.isErrorState = function (control, form) {\n            return !!(control && control.invalid && (control.dirty || (form && form.submitted)));\n        };\n        ShowOnDirtyErrorStateMatcher.decorators = [\n            { type: i0.Injectable }\n        ];\n        return ShowOnDirtyErrorStateMatcher;\n    }());\n    /** Provider that defines how form controls behave with regards to displaying error messages. */\n    var ErrorStateMatcher = /** @class */ (function () {\n        function ErrorStateMatcher() {\n        }\n        ErrorStateMatcher.prototype.isErrorState = function (control, form) {\n            return !!(control && control.invalid && (control.touched || (form && form.submitted)));\n        };\n        ErrorStateMatcher.decorators = [\n            { type: i0.Injectable, args: [{ providedIn: 'root' },] }\n        ];\n        ErrorStateMatcher.ɵprov = i0.ɵɵdefineInjectable({ factory: function ErrorStateMatcher_Factory() { return new ErrorStateMatcher(); }, token: ErrorStateMatcher, providedIn: \"root\" });\n        return ErrorStateMatcher;\n    }());\n\n    /**\n     * @license\n     * Copyright Google LLC All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Injection token that can be used to provide options to the Hammerjs instance.\n     * More info at http://hammerjs.github.io/api/.\n     * @deprecated No longer being used. To be removed.\n     * @breaking-change 10.0.0\n     */\n    var MAT_HAMMER_OPTIONS = new i0.InjectionToken('MAT_HAMMER_OPTIONS');\n    var ANGULAR_MATERIAL_SUPPORTED_HAMMER_GESTURES = [\n        'longpress',\n        'slide',\n        'slidestart',\n        'slideend',\n        'slideright',\n        'slideleft'\n    ];\n    var ɵ0$2 = function () { }, ɵ1 = function () { };\n    /**\n     * Fake HammerInstance that is used when a Hammer instance is requested when HammerJS has not\n     * been loaded on the page.\n     */\n    var noopHammerInstance = {\n        on: ɵ0$2,\n        off: ɵ1,\n    };\n    /**\n     * Adjusts configuration of our gesture library, Hammer.\n     * @deprecated No longer being used. To be removed.\n     * @breaking-change 10.0.0\n     */\n    var GestureConfig = /** @class */ (function (_super) {\n        tslib.__extends(GestureConfig, _super);\n        function GestureConfig(_hammerOptions, _commonModule) {\n            var _this = _super.call(this) || this;\n            _this._hammerOptions = _hammerOptions;\n            /** List of new event names to add to the gesture support list */\n            _this.events = ANGULAR_MATERIAL_SUPPORTED_HAMMER_GESTURES;\n            return _this;\n        }\n        /**\n         * Builds Hammer instance manually to add custom recognizers that match the Material Design spec.\n         *\n         * Our gesture names come from the Material Design gestures spec:\n         * https://material.io/design/#gestures-touch-mechanics\n         *\n         * More information on default recognizers can be found in Hammer docs:\n         * http://hammerjs.github.io/recognizer-pan/\n         * http://hammerjs.github.io/recognizer-press/\n         *\n         * @param element Element to which to assign the new HammerJS gestures.\n         * @returns Newly-created HammerJS instance.\n         */\n        GestureConfig.prototype.buildHammer = function (element) {\n            var hammer = typeof window !== 'undefined' ? window.Hammer : null;\n            if (!hammer) {\n                // If HammerJS is not loaded here, return the noop HammerInstance. This is necessary to\n                // ensure that omitting HammerJS completely will not cause any errors while *also* supporting\n                // the lazy-loading of HammerJS via the HAMMER_LOADER token introduced in Angular 6.1.\n                // Because we can't depend on HAMMER_LOADER's existance until 7.0, we have to always set\n                // `this.events` to the set we support, instead of conditionally setting it to `[]` if\n                // `HAMMER_LOADER` is present (and then throwing an Error here if `window.Hammer` is\n                // undefined).\n                // @breaking-change 8.0.0\n                return noopHammerInstance;\n            }\n            var mc = new hammer(element, this._hammerOptions || undefined);\n            // Default Hammer Recognizers.\n            var pan = new hammer.Pan();\n            var swipe = new hammer.Swipe();\n            var press = new hammer.Press();\n            // Notice that a HammerJS recognizer can only depend on one other recognizer once.\n            // Otherwise the previous `recognizeWith` will be dropped.\n            // TODO: Confirm threshold numbers with Material Design UX Team\n            var slide = this._createRecognizer(pan, { event: 'slide', threshold: 0 }, swipe);\n            var longpress = this._createRecognizer(press, { event: 'longpress', time: 500 });\n            // Overwrite the default `pan` event to use the swipe event.\n            pan.recognizeWith(swipe);\n            // Since the slide event threshold is set to zero, the slide recognizer can fire and\n            // accidentally reset the longpress recognizer. In order to make sure that the two\n            // recognizers can run simultaneously but don't affect each other, we allow the slide\n            // recognizer to recognize while a longpress is being processed.\n            // See: https://github.com/hammerjs/hammer.js/blob/master/src/manager.js#L123-L124\n            longpress.recognizeWith(slide);\n            // Add customized gestures to Hammer manager\n            mc.add([swipe, press, pan, slide, longpress]);\n            return mc;\n        };\n        /** Creates a new recognizer, without affecting the default recognizers of HammerJS */\n        GestureConfig.prototype._createRecognizer = function (base, options) {\n            var inheritances = [];\n            for (var _i = 2; _i < arguments.length; _i++) {\n                inheritances[_i - 2] = arguments[_i];\n            }\n            var recognizer = new base.constructor(options);\n            inheritances.push(base);\n            inheritances.forEach(function (item) { return recognizer.recognizeWith(item); });\n            return recognizer;\n        };\n        GestureConfig.decorators = [\n            { type: i0.Injectable }\n        ];\n        /** @nocollapse */\n        GestureConfig.ctorParameters = function () { return [\n            { type: undefined, decorators: [{ type: i0.Optional }, { type: i0.Inject, args: [MAT_HAMMER_OPTIONS,] }] },\n            { type: MatCommonModule, decorators: [{ type: i0.Optional }] }\n        ]; };\n        return GestureConfig;\n    }(platformBrowser.HammerGestureConfig));\n\n    /**\n     * @license\n     * Copyright Google LLC All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Shared directive to count lines inside a text area, such as a list item.\n     * Line elements can be extracted with a @ContentChildren(MatLine) query, then\n     * counted by checking the query list's length.\n     */\n    var MatLine = /** @class */ (function () {\n        function MatLine() {\n        }\n        MatLine.decorators = [\n            { type: i0.Directive, args: [{\n                        selector: '[mat-line], [matLine]',\n                        host: { 'class': 'mat-line' }\n                    },] }\n        ];\n        return MatLine;\n    }());\n    /**\n     * Helper that takes a query list of lines and sets the correct class on the host.\n     * @docs-private\n     */\n    function setLines(lines, element) {\n        // Note: doesn't need to unsubscribe, because `changes`\n        // gets completed by Angular when the view is destroyed.\n        lines.changes.pipe(operators.startWith(lines)).subscribe(function (_a) {\n            var length = _a.length;\n            setClass(element, 'mat-2-line', false);\n            setClass(element, 'mat-3-line', false);\n            setClass(element, 'mat-multi-line', false);\n            if (length === 2 || length === 3) {\n                setClass(element, \"mat-\" + length + \"-line\", true);\n            }\n            else if (length > 3) {\n                setClass(element, \"mat-multi-line\", true);\n            }\n        });\n    }\n    /** Adds or removes a class from an element. */\n    function setClass(element, className, isAdd) {\n        var classList = element.nativeElement.classList;\n        isAdd ? classList.add(className) : classList.remove(className);\n    }\n    /**\n     * Helper that takes a query list of lines and sets the correct class on the host.\n     * @docs-private\n     * @deprecated Use `setLines` instead.\n     * @breaking-change 8.0.0\n     */\n    var MatLineSetter = /** @class */ (function () {\n        function MatLineSetter(lines, element) {\n            setLines(lines, element);\n        }\n        return MatLineSetter;\n    }());\n    var MatLineModule = /** @class */ (function () {\n        function MatLineModule() {\n        }\n        MatLineModule.decorators = [\n            { type: i0.NgModule, args: [{\n                        imports: [MatCommonModule],\n                        exports: [MatLine, MatCommonModule],\n                        declarations: [MatLine],\n                    },] }\n        ];\n        return MatLineModule;\n    }());\n\n    /**\n     * @license\n     * Copyright Google LLC All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    (function (RippleState) {\n        RippleState[RippleState[\"FADING_IN\"] = 0] = \"FADING_IN\";\n        RippleState[RippleState[\"VISIBLE\"] = 1] = \"VISIBLE\";\n        RippleState[RippleState[\"FADING_OUT\"] = 2] = \"FADING_OUT\";\n        RippleState[RippleState[\"HIDDEN\"] = 3] = \"HIDDEN\";\n    })(exports.RippleState || (exports.RippleState = {}));\n    /**\n     * Reference to a previously launched ripple element.\n     */\n    var RippleRef = /** @class */ (function () {\n        function RippleRef(_renderer, \n        /** Reference to the ripple HTML element. */\n        element, \n        /** Ripple configuration used for the ripple. */\n        config) {\n            this._renderer = _renderer;\n            this.element = element;\n            this.config = config;\n            /** Current state of the ripple. */\n            this.state = exports.RippleState.HIDDEN;\n        }\n        /** Fades out the ripple element. */\n        RippleRef.prototype.fadeOut = function () {\n            this._renderer.fadeOutRipple(this);\n        };\n        return RippleRef;\n    }());\n\n    /**\n     * Default ripple animation configuration for ripples without an explicit\n     * animation config specified.\n     */\n    var defaultRippleAnimationConfig = {\n        enterDuration: 450,\n        exitDuration: 400\n    };\n    /**\n     * Timeout for ignoring mouse events. Mouse events will be temporary ignored after touch\n     * events to avoid synthetic mouse events.\n     */\n    var ignoreMouseEventsTimeout = 800;\n    /** Options that apply to all the event listeners that are bound by the ripple renderer. */\n    var passiveEventOptions = platform.normalizePassiveListenerOptions({ passive: true });\n    /**\n     * Helper service that performs DOM manipulations. Not intended to be used outside this module.\n     * The constructor takes a reference to the ripple directive's host element and a map of DOM\n     * event handlers to be installed on the element that triggers ripple animations.\n     * This will eventually become a custom renderer once Angular support exists.\n     * @docs-private\n     */\n    var RippleRenderer = /** @class */ (function () {\n        function RippleRenderer(_target, _ngZone, elementOrElementRef, platform) {\n            var _this = this;\n            this._target = _target;\n            this._ngZone = _ngZone;\n            /** Whether the pointer is currently down or not. */\n            this._isPointerDown = false;\n            /** Events to be registered on the trigger element. */\n            this._triggerEvents = new Map();\n            /** Set of currently active ripple references. */\n            this._activeRipples = new Set();\n            /** Function being called whenever the trigger is being pressed using mouse. */\n            this._onMousedown = function (event) {\n                // Screen readers will fire fake mouse events for space/enter. Skip launching a\n                // ripple in this case for consistency with the non-screen-reader experience.\n                var isFakeMousedown = a11y.isFakeMousedownFromScreenReader(event);\n                var isSyntheticEvent = _this._lastTouchStartEvent &&\n                    Date.now() < _this._lastTouchStartEvent + ignoreMouseEventsTimeout;\n                if (!_this._target.rippleDisabled && !isFakeMousedown && !isSyntheticEvent) {\n                    _this._isPointerDown = true;\n                    _this.fadeInRipple(event.clientX, event.clientY, _this._target.rippleConfig);\n                }\n            };\n            /** Function being called whenever the trigger is being pressed using touch. */\n            this._onTouchStart = function (event) {\n                if (!_this._target.rippleDisabled) {\n                    // Some browsers fire mouse events after a `touchstart` event. Those synthetic mouse\n                    // events will launch a second ripple if we don't ignore mouse events for a specific\n                    // time after a touchstart event.\n                    _this._lastTouchStartEvent = Date.now();\n                    _this._isPointerDown = true;\n                    // Use `changedTouches` so we skip any touches where the user put\n                    // their finger down, but used another finger to tap the element again.\n                    var touches = event.changedTouches;\n                    for (var i = 0; i < touches.length; i++) {\n                        _this.fadeInRipple(touches[i].clientX, touches[i].clientY, _this._target.rippleConfig);\n                    }\n                }\n            };\n            /** Function being called whenever the trigger is being released. */\n            this._onPointerUp = function () {\n                if (!_this._isPointerDown) {\n                    return;\n                }\n                _this._isPointerDown = false;\n                // Fade-out all ripples that are visible and not persistent.\n                _this._activeRipples.forEach(function (ripple) {\n                    // By default, only ripples that are completely visible will fade out on pointer release.\n                    // If the `terminateOnPointerUp` option is set, ripples that still fade in will also fade out.\n                    var isVisible = ripple.state === exports.RippleState.VISIBLE ||\n                        ripple.config.terminateOnPointerUp && ripple.state === exports.RippleState.FADING_IN;\n                    if (!ripple.config.persistent && isVisible) {\n                        ripple.fadeOut();\n                    }\n                });\n            };\n            // Only do anything if we're on the browser.\n            if (platform.isBrowser) {\n                this._containerElement = coercion.coerceElement(elementOrElementRef);\n                // Specify events which need to be registered on the trigger.\n                this._triggerEvents\n                    .set('mousedown', this._onMousedown)\n                    .set('mouseup', this._onPointerUp)\n                    .set('mouseleave', this._onPointerUp)\n                    .set('touchstart', this._onTouchStart)\n                    .set('touchend', this._onPointerUp)\n                    .set('touchcancel', this._onPointerUp);\n            }\n        }\n        /**\n         * Fades in a ripple at the given coordinates.\n         * @param x Coordinate within the element, along the X axis at which to start the ripple.\n         * @param y Coordinate within the element, along the Y axis at which to start the ripple.\n         * @param config Extra ripple options.\n         */\n        RippleRenderer.prototype.fadeInRipple = function (x, y, config) {\n            var _this = this;\n            if (config === void 0) { config = {}; }\n            var containerRect = this._containerRect =\n                this._containerRect || this._containerElement.getBoundingClientRect();\n            var animationConfig = tslib.__assign(tslib.__assign({}, defaultRippleAnimationConfig), config.animation);\n            if (config.centered) {\n                x = containerRect.left + containerRect.width / 2;\n                y = containerRect.top + containerRect.height / 2;\n            }\n            var radius = config.radius || distanceToFurthestCorner(x, y, containerRect);\n            var offsetX = x - containerRect.left;\n            var offsetY = y - containerRect.top;\n            var duration = animationConfig.enterDuration;\n            var ripple = document.createElement('div');\n            ripple.classList.add('mat-ripple-element');\n            ripple.style.left = offsetX - radius + \"px\";\n            ripple.style.top = offsetY - radius + \"px\";\n            ripple.style.height = radius * 2 + \"px\";\n            ripple.style.width = radius * 2 + \"px\";\n            // If a custom color has been specified, set it as inline style. If no color is\n            // set, the default color will be applied through the ripple theme styles.\n            if (config.color != null) {\n                ripple.style.backgroundColor = config.color;\n            }\n            ripple.style.transitionDuration = duration + \"ms\";\n            this._containerElement.appendChild(ripple);\n            // By default the browser does not recalculate the styles of dynamically created\n            // ripple elements. This is critical because then the `scale` would not animate properly.\n            enforceStyleRecalculation(ripple);\n            ripple.style.transform = 'scale(1)';\n            // Exposed reference to the ripple that will be returned.\n            var rippleRef = new RippleRef(this, ripple, config);\n            rippleRef.state = exports.RippleState.FADING_IN;\n            // Add the ripple reference to the list of all active ripples.\n            this._activeRipples.add(rippleRef);\n            if (!config.persistent) {\n                this._mostRecentTransientRipple = rippleRef;\n            }\n            // Wait for the ripple element to be completely faded in.\n            // Once it's faded in, the ripple can be hidden immediately if the mouse is released.\n            this._runTimeoutOutsideZone(function () {\n                var isMostRecentTransientRipple = rippleRef === _this._mostRecentTransientRipple;\n                rippleRef.state = exports.RippleState.VISIBLE;\n                // When the timer runs out while the user has kept their pointer down, we want to\n                // keep only the persistent ripples and the latest transient ripple. We do this,\n                // because we don't want stacked transient ripples to appear after their enter\n                // animation has finished.\n                if (!config.persistent && (!isMostRecentTransientRipple || !_this._isPointerDown)) {\n                    rippleRef.fadeOut();\n                }\n            }, duration);\n            return rippleRef;\n        };\n        /** Fades out a ripple reference. */\n        RippleRenderer.prototype.fadeOutRipple = function (rippleRef) {\n            var wasActive = this._activeRipples.delete(rippleRef);\n            if (rippleRef === this._mostRecentTransientRipple) {\n                this._mostRecentTransientRipple = null;\n            }\n            // Clear out the cached bounding rect if we have no more ripples.\n            if (!this._activeRipples.size) {\n                this._containerRect = null;\n            }\n            // For ripples that are not active anymore, don't re-run the fade-out animation.\n            if (!wasActive) {\n                return;\n            }\n            var rippleEl = rippleRef.element;\n            var animationConfig = tslib.__assign(tslib.__assign({}, defaultRippleAnimationConfig), rippleRef.config.animation);\n            rippleEl.style.transitionDuration = animationConfig.exitDuration + \"ms\";\n            rippleEl.style.opacity = '0';\n            rippleRef.state = exports.RippleState.FADING_OUT;\n            // Once the ripple faded out, the ripple can be safely removed from the DOM.\n            this._runTimeoutOutsideZone(function () {\n                rippleRef.state = exports.RippleState.HIDDEN;\n                rippleEl.parentNode.removeChild(rippleEl);\n            }, animationConfig.exitDuration);\n        };\n        /** Fades out all currently active ripples. */\n        RippleRenderer.prototype.fadeOutAll = function () {\n            this._activeRipples.forEach(function (ripple) { return ripple.fadeOut(); });\n        };\n        /** Sets up the trigger event listeners */\n        RippleRenderer.prototype.setupTriggerEvents = function (elementOrElementRef) {\n            var _this = this;\n            var element = coercion.coerceElement(elementOrElementRef);\n            if (!element || element === this._triggerElement) {\n                return;\n            }\n            // Remove all previously registered event listeners from the trigger element.\n            this._removeTriggerEvents();\n            this._ngZone.runOutsideAngular(function () {\n                _this._triggerEvents.forEach(function (fn, type) {\n                    element.addEventListener(type, fn, passiveEventOptions);\n                });\n            });\n            this._triggerElement = element;\n        };\n        /** Runs a timeout outside of the Angular zone to avoid triggering the change detection. */\n        RippleRenderer.prototype._runTimeoutOutsideZone = function (fn, delay) {\n            if (delay === void 0) { delay = 0; }\n            this._ngZone.runOutsideAngular(function () { return setTimeout(fn, delay); });\n        };\n        /** Removes previously registered event listeners from the trigger element. */\n        RippleRenderer.prototype._removeTriggerEvents = function () {\n            var _this = this;\n            if (this._triggerElement) {\n                this._triggerEvents.forEach(function (fn, type) {\n                    _this._triggerElement.removeEventListener(type, fn, passiveEventOptions);\n                });\n            }\n        };\n        return RippleRenderer;\n    }());\n    /** Enforces a style recalculation of a DOM element by computing its styles. */\n    function enforceStyleRecalculation(element) {\n        // Enforce a style recalculation by calling `getComputedStyle` and accessing any property.\n        // Calling `getPropertyValue` is important to let optimizers know that this is not a noop.\n        // See: https://gist.github.com/paulirish/5d52fb081b3570c81e3a\n        window.getComputedStyle(element).getPropertyValue('opacity');\n    }\n    /**\n     * Returns the distance from the point (x, y) to the furthest corner of a rectangle.\n     */\n    function distanceToFurthestCorner(x, y, rect) {\n        var distX = Math.max(Math.abs(x - rect.left), Math.abs(x - rect.right));\n        var distY = Math.max(Math.abs(y - rect.top), Math.abs(y - rect.bottom));\n        return Math.sqrt(distX * distX + distY * distY);\n    }\n\n    /**\n     * @license\n     * Copyright Google LLC All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /** Injection token that can be used to specify the global ripple options. */\n    var MAT_RIPPLE_GLOBAL_OPTIONS = new i0.InjectionToken('mat-ripple-global-options');\n    var MatRipple = /** @class */ (function () {\n        function MatRipple(_elementRef, ngZone, platform, globalOptions, animationMode) {\n            this._elementRef = _elementRef;\n            /**\n             * If set, the radius in pixels of foreground ripples when fully expanded. If unset, the radius\n             * will be the distance from the center of the ripple to the furthest corner of the host element's\n             * bounding rectangle.\n             */\n            this.radius = 0;\n            this._disabled = false;\n            /** Whether ripple directive is initialized and the input bindings are set. */\n            this._isInitialized = false;\n            this._globalOptions = globalOptions || {};\n            this._rippleRenderer = new RippleRenderer(this, ngZone, _elementRef, platform);\n            if (animationMode === 'NoopAnimations') {\n                this._globalOptions.animation = { enterDuration: 0, exitDuration: 0 };\n            }\n        }\n        Object.defineProperty(MatRipple.prototype, \"disabled\", {\n            /**\n             * Whether click events will not trigger the ripple. Ripples can be still launched manually\n             * by using the `launch()` method.\n             */\n            get: function () { return this._disabled; },\n            set: function (value) {\n                this._disabled = value;\n                this._setupTriggerEventsIfEnabled();\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(MatRipple.prototype, \"trigger\", {\n            /**\n             * The element that triggers the ripple when click events are received.\n             * Defaults to the directive's host element.\n             */\n            get: function () { return this._trigger || this._elementRef.nativeElement; },\n            set: function (trigger) {\n                this._trigger = trigger;\n                this._setupTriggerEventsIfEnabled();\n            },\n            enumerable: true,\n            configurable: true\n        });\n        MatRipple.prototype.ngOnInit = function () {\n            this._isInitialized = true;\n            this._setupTriggerEventsIfEnabled();\n        };\n        MatRipple.prototype.ngOnDestroy = function () {\n            this._rippleRenderer._removeTriggerEvents();\n        };\n        /** Fades out all currently showing ripple elements. */\n        MatRipple.prototype.fadeOutAll = function () {\n            this._rippleRenderer.fadeOutAll();\n        };\n        Object.defineProperty(MatRipple.prototype, \"rippleConfig\", {\n            /**\n             * Ripple configuration from the directive's input values.\n             * @docs-private Implemented as part of RippleTarget\n             */\n            get: function () {\n                return {\n                    centered: this.centered,\n                    radius: this.radius,\n                    color: this.color,\n                    animation: tslib.__assign(tslib.__assign({}, this._globalOptions.animation), this.animation),\n                    terminateOnPointerUp: this._globalOptions.terminateOnPointerUp,\n                };\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(MatRipple.prototype, \"rippleDisabled\", {\n            /**\n             * Whether ripples on pointer-down are disabled or not.\n             * @docs-private Implemented as part of RippleTarget\n             */\n            get: function () {\n                return this.disabled || !!this._globalOptions.disabled;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        /** Sets up the trigger event listeners if ripples are enabled. */\n        MatRipple.prototype._setupTriggerEventsIfEnabled = function () {\n            if (!this.disabled && this._isInitialized) {\n                this._rippleRenderer.setupTriggerEvents(this.trigger);\n            }\n        };\n        /** Launches a manual ripple at the specified coordinated or just by the ripple config. */\n        MatRipple.prototype.launch = function (configOrX, y, config) {\n            if (y === void 0) { y = 0; }\n            if (typeof configOrX === 'number') {\n                return this._rippleRenderer.fadeInRipple(configOrX, y, tslib.__assign(tslib.__assign({}, this.rippleConfig), config));\n            }\n            else {\n                return this._rippleRenderer.fadeInRipple(0, 0, tslib.__assign(tslib.__assign({}, this.rippleConfig), configOrX));\n            }\n        };\n        MatRipple.decorators = [\n            { type: i0.Directive, args: [{\n                        selector: '[mat-ripple], [matRipple]',\n                        exportAs: 'matRipple',\n                        host: {\n                            'class': 'mat-ripple',\n                            '[class.mat-ripple-unbounded]': 'unbounded'\n                        }\n                    },] }\n        ];\n        /** @nocollapse */\n        MatRipple.ctorParameters = function () { return [\n            { type: i0.ElementRef },\n            { type: i0.NgZone },\n            { type: platform.Platform },\n            { type: undefined, decorators: [{ type: i0.Optional }, { type: i0.Inject, args: [MAT_RIPPLE_GLOBAL_OPTIONS,] }] },\n            { type: String, decorators: [{ type: i0.Optional }, { type: i0.Inject, args: [animations.ANIMATION_MODULE_TYPE,] }] }\n        ]; };\n        MatRipple.propDecorators = {\n            color: [{ type: i0.Input, args: ['matRippleColor',] }],\n            unbounded: [{ type: i0.Input, args: ['matRippleUnbounded',] }],\n            centered: [{ type: i0.Input, args: ['matRippleCentered',] }],\n            radius: [{ type: i0.Input, args: ['matRippleRadius',] }],\n            animation: [{ type: i0.Input, args: ['matRippleAnimation',] }],\n            disabled: [{ type: i0.Input, args: ['matRippleDisabled',] }],\n            trigger: [{ type: i0.Input, args: ['matRippleTrigger',] }]\n        };\n        return MatRipple;\n    }());\n\n    /**\n     * @license\n     * Copyright Google LLC All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var MatRippleModule = /** @class */ (function () {\n        function MatRippleModule() {\n        }\n        MatRippleModule.decorators = [\n            { type: i0.NgModule, args: [{\n                        imports: [MatCommonModule, platform.PlatformModule],\n                        exports: [MatRipple, MatCommonModule],\n                        declarations: [MatRipple],\n                    },] }\n        ];\n        return MatRippleModule;\n    }());\n\n    /**\n     * @license\n     * Copyright Google LLC All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Component that shows a simplified checkbox without including any kind of \"real\" checkbox.\n     * Meant to be used when the checkbox is purely decorative and a large number of them will be\n     * included, such as for the options in a multi-select. Uses no SVGs or complex animations.\n     * Note that theming is meant to be handled by the parent element, e.g.\n     * `mat-primary .mat-pseudo-checkbox`.\n     *\n     * Note that this component will be completely invisible to screen-reader users. This is *not*\n     * interchangeable with `<mat-checkbox>` and should *not* be used if the user would directly\n     * interact with the checkbox. The pseudo-checkbox should only be used as an implementation detail\n     * of more complex components that appropriately handle selected / checked state.\n     * @docs-private\n     */\n    var MatPseudoCheckbox = /** @class */ (function () {\n        function MatPseudoCheckbox(_animationMode) {\n            this._animationMode = _animationMode;\n            /** Display state of the checkbox. */\n            this.state = 'unchecked';\n            /** Whether the checkbox is disabled. */\n            this.disabled = false;\n        }\n        MatPseudoCheckbox.decorators = [\n            { type: i0.Component, args: [{\n                        encapsulation: i0.ViewEncapsulation.None,\n                        changeDetection: i0.ChangeDetectionStrategy.OnPush,\n                        selector: 'mat-pseudo-checkbox',\n                        template: '',\n                        host: {\n                            'class': 'mat-pseudo-checkbox',\n                            '[class.mat-pseudo-checkbox-indeterminate]': 'state === \"indeterminate\"',\n                            '[class.mat-pseudo-checkbox-checked]': 'state === \"checked\"',\n                            '[class.mat-pseudo-checkbox-disabled]': 'disabled',\n                            '[class._mat-animation-noopable]': '_animationMode === \"NoopAnimations\"',\n                        },\n                        styles: [\".mat-pseudo-checkbox{width:16px;height:16px;border:2px solid;border-radius:2px;cursor:pointer;display:inline-block;vertical-align:middle;box-sizing:border-box;position:relative;flex-shrink:0;transition:border-color 90ms cubic-bezier(0, 0, 0.2, 0.1),background-color 90ms cubic-bezier(0, 0, 0.2, 0.1)}.mat-pseudo-checkbox::after{position:absolute;opacity:0;content:\\\"\\\";border-bottom:2px solid currentColor;transition:opacity 90ms cubic-bezier(0, 0, 0.2, 0.1)}.mat-pseudo-checkbox.mat-pseudo-checkbox-checked,.mat-pseudo-checkbox.mat-pseudo-checkbox-indeterminate{border-color:transparent}._mat-animation-noopable.mat-pseudo-checkbox{transition:none;animation:none}._mat-animation-noopable.mat-pseudo-checkbox::after{transition:none}.mat-pseudo-checkbox-disabled{cursor:default}.mat-pseudo-checkbox-indeterminate::after{top:5px;left:1px;width:10px;opacity:1;border-radius:2px}.mat-pseudo-checkbox-checked::after{top:2.4px;left:1px;width:8px;height:3px;border-left:2px solid currentColor;transform:rotate(-45deg);opacity:1;box-sizing:content-box}\\n\"]\n                    }] }\n        ];\n        /** @nocollapse */\n        MatPseudoCheckbox.ctorParameters = function () { return [\n            { type: String, decorators: [{ type: i0.Optional }, { type: i0.Inject, args: [animations.ANIMATION_MODULE_TYPE,] }] }\n        ]; };\n        MatPseudoCheckbox.propDecorators = {\n            state: [{ type: i0.Input }],\n            disabled: [{ type: i0.Input }]\n        };\n        return MatPseudoCheckbox;\n    }());\n\n    /**\n     * @license\n     * Copyright Google LLC All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var MatPseudoCheckboxModule = /** @class */ (function () {\n        function MatPseudoCheckboxModule() {\n        }\n        MatPseudoCheckboxModule.decorators = [\n            { type: i0.NgModule, args: [{\n                        exports: [MatPseudoCheckbox],\n                        declarations: [MatPseudoCheckbox]\n                    },] }\n        ];\n        return MatPseudoCheckboxModule;\n    }());\n\n    /**\n     * @license\n     * Copyright Google LLC All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // Boilerplate for applying mixins to MatOptgroup.\n    /** @docs-private */\n    var MatOptgroupBase = /** @class */ (function () {\n        function MatOptgroupBase() {\n        }\n        return MatOptgroupBase;\n    }());\n    var _MatOptgroupMixinBase = mixinDisabled(MatOptgroupBase);\n    // Counter for unique group ids.\n    var _uniqueOptgroupIdCounter = 0;\n    /**\n     * Component that is used to group instances of `mat-option`.\n     */\n    var MatOptgroup = /** @class */ (function (_super) {\n        tslib.__extends(MatOptgroup, _super);\n        function MatOptgroup() {\n            var _this = _super !== null && _super.apply(this, arguments) || this;\n            /** Unique id for the underlying label. */\n            _this._labelId = \"mat-optgroup-label-\" + _uniqueOptgroupIdCounter++;\n            return _this;\n        }\n        MatOptgroup.decorators = [\n            { type: i0.Component, args: [{\n                        selector: 'mat-optgroup',\n                        exportAs: 'matOptgroup',\n                        template: \"<label class=\\\"mat-optgroup-label\\\" [id]=\\\"_labelId\\\">{{ label }} <ng-content></ng-content></label>\\n<ng-content select=\\\"mat-option, ng-container\\\"></ng-content>\\n\",\n                        encapsulation: i0.ViewEncapsulation.None,\n                        changeDetection: i0.ChangeDetectionStrategy.OnPush,\n                        inputs: ['disabled'],\n                        host: {\n                            'class': 'mat-optgroup',\n                            'role': 'group',\n                            '[class.mat-optgroup-disabled]': 'disabled',\n                            '[attr.aria-disabled]': 'disabled.toString()',\n                            '[attr.aria-labelledby]': '_labelId',\n                        },\n                        styles: [\".mat-optgroup-label{white-space:nowrap;overflow:hidden;text-overflow:ellipsis;display:block;line-height:48px;height:48px;padding:0 16px;text-align:left;text-decoration:none;max-width:100%;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:default}.mat-optgroup-label[disabled]{cursor:default}[dir=rtl] .mat-optgroup-label{text-align:right}.mat-optgroup-label .mat-icon{margin-right:16px;vertical-align:middle}.mat-optgroup-label .mat-icon svg{vertical-align:top}[dir=rtl] .mat-optgroup-label .mat-icon{margin-left:16px;margin-right:0}\\n\"]\n                    }] }\n        ];\n        MatOptgroup.propDecorators = {\n            label: [{ type: i0.Input }]\n        };\n        return MatOptgroup;\n    }(_MatOptgroupMixinBase));\n\n    /**\n     * @license\n     * Copyright Google LLC All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Option IDs need to be unique across components, so this counter exists outside of\n     * the component definition.\n     */\n    var _uniqueIdCounter = 0;\n    /** Event object emitted by MatOption when selected or deselected. */\n    var MatOptionSelectionChange = /** @class */ (function () {\n        function MatOptionSelectionChange(\n        /** Reference to the option that emitted the event. */\n        source, \n        /** Whether the change in the option's value was a result of a user action. */\n        isUserInput) {\n            if (isUserInput === void 0) { isUserInput = false; }\n            this.source = source;\n            this.isUserInput = isUserInput;\n        }\n        return MatOptionSelectionChange;\n    }());\n    /**\n     * Injection token used to provide the parent component to options.\n     */\n    var MAT_OPTION_PARENT_COMPONENT = new i0.InjectionToken('MAT_OPTION_PARENT_COMPONENT');\n    /**\n     * Single option inside of a `<mat-select>` element.\n     */\n    var MatOption = /** @class */ (function () {\n        function MatOption(_element, _changeDetectorRef, _parent, group) {\n            this._element = _element;\n            this._changeDetectorRef = _changeDetectorRef;\n            this._parent = _parent;\n            this.group = group;\n            this._selected = false;\n            this._active = false;\n            this._disabled = false;\n            this._mostRecentViewValue = '';\n            /** The unique ID of the option. */\n            this.id = \"mat-option-\" + _uniqueIdCounter++;\n            /** Event emitted when the option is selected or deselected. */\n            // tslint:disable-next-line:no-output-on-prefix\n            this.onSelectionChange = new i0.EventEmitter();\n            /** Emits when the state of the option changes and any parents have to be notified. */\n            this._stateChanges = new rxjs.Subject();\n        }\n        Object.defineProperty(MatOption.prototype, \"multiple\", {\n            /** Whether the wrapping component is in multiple selection mode. */\n            get: function () { return this._parent && this._parent.multiple; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(MatOption.prototype, \"selected\", {\n            /** Whether or not the option is currently selected. */\n            get: function () { return this._selected; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(MatOption.prototype, \"disabled\", {\n            /** Whether the option is disabled. */\n            get: function () { return (this.group && this.group.disabled) || this._disabled; },\n            set: function (value) { this._disabled = coercion.coerceBooleanProperty(value); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(MatOption.prototype, \"disableRipple\", {\n            /** Whether ripples for the option are disabled. */\n            get: function () { return this._parent && this._parent.disableRipple; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(MatOption.prototype, \"active\", {\n            /**\n             * Whether or not the option is currently active and ready to be selected.\n             * An active option displays styles as if it is focused, but the\n             * focus is actually retained somewhere else. This comes in handy\n             * for components like autocomplete where focus must remain on the input.\n             */\n            get: function () {\n                return this._active;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(MatOption.prototype, \"viewValue\", {\n            /**\n             * The displayed value of the option. It is necessary to show the selected option in the\n             * select's trigger.\n             */\n            get: function () {\n                // TODO(kara): Add input property alternative for node envs.\n                return (this._getHostElement().textContent || '').trim();\n            },\n            enumerable: true,\n            configurable: true\n        });\n        /** Selects the option. */\n        MatOption.prototype.select = function () {\n            if (!this._selected) {\n                this._selected = true;\n                this._changeDetectorRef.markForCheck();\n                this._emitSelectionChangeEvent();\n            }\n        };\n        /** Deselects the option. */\n        MatOption.prototype.deselect = function () {\n            if (this._selected) {\n                this._selected = false;\n                this._changeDetectorRef.markForCheck();\n                this._emitSelectionChangeEvent();\n            }\n        };\n        /** Sets focus onto this option. */\n        MatOption.prototype.focus = function (_origin, options) {\n            // Note that we aren't using `_origin`, but we need to keep it because some internal consumers\n            // use `MatOption` in a `FocusKeyManager` and we need it to match `FocusableOption`.\n            var element = this._getHostElement();\n            if (typeof element.focus === 'function') {\n                element.focus(options);\n            }\n        };\n        /**\n         * This method sets display styles on the option to make it appear\n         * active. This is used by the ActiveDescendantKeyManager so key\n         * events will display the proper options as active on arrow key events.\n         */\n        MatOption.prototype.setActiveStyles = function () {\n            if (!this._active) {\n                this._active = true;\n                this._changeDetectorRef.markForCheck();\n            }\n        };\n        /**\n         * This method removes display styles on the option that made it appear\n         * active. This is used by the ActiveDescendantKeyManager so key\n         * events will display the proper options as active on arrow key events.\n         */\n        MatOption.prototype.setInactiveStyles = function () {\n            if (this._active) {\n                this._active = false;\n                this._changeDetectorRef.markForCheck();\n            }\n        };\n        /** Gets the label to be used when determining whether the option should be focused. */\n        MatOption.prototype.getLabel = function () {\n            return this.viewValue;\n        };\n        /** Ensures the option is selected when activated from the keyboard. */\n        MatOption.prototype._handleKeydown = function (event) {\n            if ((event.keyCode === keycodes.ENTER || event.keyCode === keycodes.SPACE) && !keycodes.hasModifierKey(event)) {\n                this._selectViaInteraction();\n                // Prevent the page from scrolling down and form submits.\n                event.preventDefault();\n            }\n        };\n        /**\n         * `Selects the option while indicating the selection came from the user. Used to\n         * determine if the select's view -> model callback should be invoked.`\n         */\n        MatOption.prototype._selectViaInteraction = function () {\n            if (!this.disabled) {\n                this._selected = this.multiple ? !this._selected : true;\n                this._changeDetectorRef.markForCheck();\n                this._emitSelectionChangeEvent(true);\n            }\n        };\n        /**\n         * Gets the `aria-selected` value for the option. We explicitly omit the `aria-selected`\n         * attribute from single-selection, unselected options. Including the `aria-selected=\"false\"`\n         * attributes adds a significant amount of noise to screen-reader users without providing useful\n         * information.\n         */\n        MatOption.prototype._getAriaSelected = function () {\n            return this.selected || (this.multiple ? false : null);\n        };\n        /** Returns the correct tabindex for the option depending on disabled state. */\n        MatOption.prototype._getTabIndex = function () {\n            return this.disabled ? '-1' : '0';\n        };\n        /** Gets the host DOM element. */\n        MatOption.prototype._getHostElement = function () {\n            return this._element.nativeElement;\n        };\n        MatOption.prototype.ngAfterViewChecked = function () {\n            // Since parent components could be using the option's label to display the selected values\n            // (e.g. `mat-select`) and they don't have a way of knowing if the option's label has changed\n            // we have to check for changes in the DOM ourselves and dispatch an event. These checks are\n            // relatively cheap, however we still limit them only to selected options in order to avoid\n            // hitting the DOM too often.\n            if (this._selected) {\n                var viewValue = this.viewValue;\n                if (viewValue !== this._mostRecentViewValue) {\n                    this._mostRecentViewValue = viewValue;\n                    this._stateChanges.next();\n                }\n            }\n        };\n        MatOption.prototype.ngOnDestroy = function () {\n            this._stateChanges.complete();\n        };\n        /** Emits the selection change event. */\n        MatOption.prototype._emitSelectionChangeEvent = function (isUserInput) {\n            if (isUserInput === void 0) { isUserInput = false; }\n            this.onSelectionChange.emit(new MatOptionSelectionChange(this, isUserInput));\n        };\n        MatOption.decorators = [\n            { type: i0.Component, args: [{\n                        selector: 'mat-option',\n                        exportAs: 'matOption',\n                        host: {\n                            'role': 'option',\n                            '[attr.tabindex]': '_getTabIndex()',\n                            '[class.mat-selected]': 'selected',\n                            '[class.mat-option-multiple]': 'multiple',\n                            '[class.mat-active]': 'active',\n                            '[id]': 'id',\n                            '[attr.aria-selected]': '_getAriaSelected()',\n                            '[attr.aria-disabled]': 'disabled.toString()',\n                            '[class.mat-option-disabled]': 'disabled',\n                            '(click)': '_selectViaInteraction()',\n                            '(keydown)': '_handleKeydown($event)',\n                            'class': 'mat-option',\n                        },\n                        template: \"<mat-pseudo-checkbox *ngIf=\\\"multiple\\\" class=\\\"mat-option-pseudo-checkbox\\\"\\n    [state]=\\\"selected ? 'checked' : 'unchecked'\\\" [disabled]=\\\"disabled\\\"></mat-pseudo-checkbox>\\n\\n<span class=\\\"mat-option-text\\\"><ng-content></ng-content></span>\\n\\n<div class=\\\"mat-option-ripple\\\" mat-ripple\\n     [matRippleTrigger]=\\\"_getHostElement()\\\"\\n     [matRippleDisabled]=\\\"disabled || disableRipple\\\">\\n</div>\\n\",\n                        encapsulation: i0.ViewEncapsulation.None,\n                        changeDetection: i0.ChangeDetectionStrategy.OnPush,\n                        styles: [\".mat-option{white-space:nowrap;overflow:hidden;text-overflow:ellipsis;display:block;line-height:48px;height:48px;padding:0 16px;text-align:left;text-decoration:none;max-width:100%;position:relative;cursor:pointer;outline:none;display:flex;flex-direction:row;max-width:100%;box-sizing:border-box;align-items:center;-webkit-tap-highlight-color:transparent}.mat-option[disabled]{cursor:default}[dir=rtl] .mat-option{text-align:right}.mat-option .mat-icon{margin-right:16px;vertical-align:middle}.mat-option .mat-icon svg{vertical-align:top}[dir=rtl] .mat-option .mat-icon{margin-left:16px;margin-right:0}.mat-option[aria-disabled=true]{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:default}.mat-optgroup .mat-option:not(.mat-option-multiple){padding-left:32px}[dir=rtl] .mat-optgroup .mat-option:not(.mat-option-multiple){padding-left:16px;padding-right:32px}.cdk-high-contrast-active .mat-option{margin:0 1px}.cdk-high-contrast-active .mat-option.mat-active{border:solid 1px currentColor;margin:0}.mat-option-text{display:inline-block;flex-grow:1;overflow:hidden;text-overflow:ellipsis}.mat-option .mat-option-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.cdk-high-contrast-active .mat-option .mat-option-ripple{opacity:.5}.mat-option-pseudo-checkbox{margin-right:8px}[dir=rtl] .mat-option-pseudo-checkbox{margin-left:8px;margin-right:0}\\n\"]\n                    }] }\n        ];\n        /** @nocollapse */\n        MatOption.ctorParameters = function () { return [\n            { type: i0.ElementRef },\n            { type: i0.ChangeDetectorRef },\n            { type: undefined, decorators: [{ type: i0.Optional }, { type: i0.Inject, args: [MAT_OPTION_PARENT_COMPONENT,] }] },\n            { type: MatOptgroup, decorators: [{ type: i0.Optional }] }\n        ]; };\n        MatOption.propDecorators = {\n            value: [{ type: i0.Input }],\n            id: [{ type: i0.Input }],\n            disabled: [{ type: i0.Input }],\n            onSelectionChange: [{ type: i0.Output }]\n        };\n        return MatOption;\n    }());\n    /**\n     * Counts the amount of option group labels that precede the specified option.\n     * @param optionIndex Index of the option at which to start counting.\n     * @param options Flat list of all of the options.\n     * @param optionGroups Flat list of all of the option groups.\n     * @docs-private\n     */\n    function _countGroupLabelsBeforeOption(optionIndex, options, optionGroups) {\n        if (optionGroups.length) {\n            var optionsArray = options.toArray();\n            var groups = optionGroups.toArray();\n            var groupCounter = 0;\n            for (var i = 0; i < optionIndex + 1; i++) {\n                if (optionsArray[i].group && optionsArray[i].group === groups[groupCounter]) {\n                    groupCounter++;\n                }\n            }\n            return groupCounter;\n        }\n        return 0;\n    }\n    /**\n     * Determines the position to which to scroll a panel in order for an option to be into view.\n     * @param optionIndex Index of the option to be scrolled into the view.\n     * @param optionHeight Height of the options.\n     * @param currentScrollPosition Current scroll position of the panel.\n     * @param panelHeight Height of the panel.\n     * @docs-private\n     */\n    function _getOptionScrollPosition(optionIndex, optionHeight, currentScrollPosition, panelHeight) {\n        var optionOffset = optionIndex * optionHeight;\n        if (optionOffset < currentScrollPosition) {\n            return optionOffset;\n        }\n        if (optionOffset + optionHeight > currentScrollPosition + panelHeight) {\n            return Math.max(0, optionOffset - panelHeight + optionHeight);\n        }\n        return currentScrollPosition;\n    }\n\n    /**\n     * @license\n     * Copyright Google LLC All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var MatOptionModule = /** @class */ (function () {\n        function MatOptionModule() {\n        }\n        MatOptionModule.decorators = [\n            { type: i0.NgModule, args: [{\n                        imports: [MatRippleModule, common.CommonModule, MatPseudoCheckboxModule],\n                        exports: [MatOption, MatOptgroup],\n                        declarations: [MatOption, MatOptgroup]\n                    },] }\n        ];\n        return MatOptionModule;\n    }());\n\n    /**\n     * @license\n     * Copyright Google LLC All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /** InjectionToken that can be used to specify the global label options. */\n    var MAT_LABEL_GLOBAL_OPTIONS = new i0.InjectionToken('mat-label-global-options');\n\n    /**\n     * @license\n     * Copyright Google LLC All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * When constructing a Date, the month is zero-based. This can be confusing, since people are\n     * used to seeing them one-based. So we create these aliases to make writing the tests easier.\n     * @docs-private\n     * @breaking-change 8.0.0 Remove this with V8 since it was only targeted for testing.\n     */\n    var JAN = 0, FEB = 1, MAR = 2, APR = 3, MAY = 4, JUN = 5, JUL = 6, AUG = 7, SEP = 8, OCT = 9, NOV = 10, DEC = 11;\n\n    /**\n     * @license\n     * Copyright Google LLC All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * Generated bundle index. Do not edit.\n     */\n\n    exports.APR = APR;\n    exports.AUG = AUG;\n    exports.AnimationCurves = AnimationCurves;\n    exports.AnimationDurations = AnimationDurations;\n    exports.DEC = DEC;\n    exports.DateAdapter = DateAdapter;\n    exports.ErrorStateMatcher = ErrorStateMatcher;\n    exports.FEB = FEB;\n    exports.GestureConfig = GestureConfig;\n    exports.JAN = JAN;\n    exports.JUL = JUL;\n    exports.JUN = JUN;\n    exports.MAR = MAR;\n    exports.MATERIAL_SANITY_CHECKS = MATERIAL_SANITY_CHECKS;\n    exports.MAT_DATE_FORMATS = MAT_DATE_FORMATS;\n    exports.MAT_DATE_LOCALE = MAT_DATE_LOCALE;\n    exports.MAT_DATE_LOCALE_FACTORY = MAT_DATE_LOCALE_FACTORY;\n    exports.MAT_DATE_LOCALE_PROVIDER = MAT_DATE_LOCALE_PROVIDER;\n    exports.MAT_HAMMER_OPTIONS = MAT_HAMMER_OPTIONS;\n    exports.MAT_LABEL_GLOBAL_OPTIONS = MAT_LABEL_GLOBAL_OPTIONS;\n    exports.MAT_NATIVE_DATE_FORMATS = MAT_NATIVE_DATE_FORMATS;\n    exports.MAT_OPTION_PARENT_COMPONENT = MAT_OPTION_PARENT_COMPONENT;\n    exports.MAT_RIPPLE_GLOBAL_OPTIONS = MAT_RIPPLE_GLOBAL_OPTIONS;\n    exports.MAY = MAY;\n    exports.MatCommonModule = MatCommonModule;\n    exports.MatLine = MatLine;\n    exports.MatLineModule = MatLineModule;\n    exports.MatLineSetter = MatLineSetter;\n    exports.MatNativeDateModule = MatNativeDateModule;\n    exports.MatOptgroup = MatOptgroup;\n    exports.MatOption = MatOption;\n    exports.MatOptionModule = MatOptionModule;\n    exports.MatOptionSelectionChange = MatOptionSelectionChange;\n    exports.MatPseudoCheckbox = MatPseudoCheckbox;\n    exports.MatPseudoCheckboxModule = MatPseudoCheckboxModule;\n    exports.MatRipple = MatRipple;\n    exports.MatRippleModule = MatRippleModule;\n    exports.NOV = NOV;\n    exports.NativeDateAdapter = NativeDateAdapter;\n    exports.NativeDateModule = NativeDateModule;\n    exports.OCT = OCT;\n    exports.RippleRef = RippleRef;\n    exports.RippleRenderer = RippleRenderer;\n    exports.SEP = SEP;\n    exports.ShowOnDirtyErrorStateMatcher = ShowOnDirtyErrorStateMatcher;\n    exports.VERSION = VERSION;\n    exports._countGroupLabelsBeforeOption = _countGroupLabelsBeforeOption;\n    exports._getOptionScrollPosition = _getOptionScrollPosition;\n    exports.defaultRippleAnimationConfig = defaultRippleAnimationConfig;\n    exports.mixinColor = mixinColor;\n    exports.mixinDisableRipple = mixinDisableRipple;\n    exports.mixinDisabled = mixinDisabled;\n    exports.mixinErrorState = mixinErrorState;\n    exports.mixinInitialized = mixinInitialized;\n    exports.mixinTabIndex = mixinTabIndex;\n    exports.setLines = setLines;\n    exports.ɵ0 = ɵ0$1;\n    exports.ɵ1 = ɵ1;\n    exports.ɵangular_material_src_material_core_core_a = MATERIAL_SANITY_CHECKS_FACTORY;\n\n    Object.defineProperty(exports, '__esModule', { value: true });\n\n})));\n//# sourceMappingURL=material-core.umd.js.map\n"]}